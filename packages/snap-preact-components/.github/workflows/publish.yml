
# name: Build & Tests

# on:
#   push:
#     branches: [ main ]
#   # pull_request:
#   #   branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [14.x]
#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         always-auth: true
#         node-version: ${{ matrix.node-version }}
#         registry-url: https://registry.npmjs.org
#     - name: Install dependencies
#       run: npm ci
#       env:
#         NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
#     - name: build
#       run: npm run build --if-present
#     - name: test
#       run: npm test

on:
  push:
    branches:
      - 'main'

jobs:
  Publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repositiory
        uses: actions/checkout@v2

      - name: Set Github Credentials
        run: |
          git config user.name searchspring-machine
          git config user.email machine@searchspring.com
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com'
          scope: '@searchspring'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install packages
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}

      - name: Generate Static Storybook
        run: npm run storybook:build && git add -A docs

      - name: Version
        run: npm run version

      - name: Publish Package to Github
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}